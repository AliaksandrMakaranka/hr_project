#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${2}${1}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if [ $? -eq 0 ]; then
        print_message "‚úì $1 passed" "$GREEN"
        return 0
    else
        print_message "‚úó $1 failed" "$RED"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
print_separator() {
    echo "----------------------------------------"
}

# –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
clear

print_message "Starting comprehensive project check..." "$BLUE"
print_separator

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –≤–µ—Ä—Å–∏–∏
print_message "\nChecking Node.js version..." "$YELLOW"
NODE_VERSION=$(node -v)
print_message "Node.js version: $NODE_VERSION" "$GREEN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm –≤–µ—Ä—Å–∏–∏
print_message "\nChecking npm version..." "$YELLOW"
NPM_VERSION=$(npm -v)
print_message "npm version: $NPM_VERSION" "$GREEN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_message "\nChecking dependencies..." "$YELLOW"
npm run check:deps
check_command "Dependencies check"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
print_message "\nChecking TypeScript types..." "$YELLOW"
npm run check:types
check_command "TypeScript check"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞
print_message "\nRunning ESLint..." "$YELLOW"
npm run check:lint
check_command "ESLint check"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
print_message "\nChecking code formatting..." "$YELLOW"
npm run check:format
check_command "Prettier check"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ä—Ç–≤–æ–≥–æ –∫–æ–¥–∞
print_message "\nChecking for dead code..." "$YELLOW"
npm run check:dead
check_command "Dead code check"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞
print_message "\nChecking bundle size..." "$YELLOW"
npm run build:analyze
check_command "Bundle analysis"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
print_message "\nRunning tests..." "$YELLOW"
npm run test
check_command "Tests"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏
print_message "\nChecking test coverage..." "$YELLOW"
npm run test:coverage
check_command "Test coverage"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
print_message "\nChecking production build..." "$YELLOW"
npm run build
check_command "Production build"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
print_message "\nStarting preview server..." "$YELLOW"
npm run preview &
PREVIEW_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
if curl -s http://localhost:4173 > /dev/null; then
    print_message "Preview server is running" "$GREEN"
else
    print_message "Preview server failed to start" "$RED"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
kill $PREVIEW_PID

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print_separator
print_message "\nProject check completed!" "$BLUE"
print_message "Node.js version: $NODE_VERSION" "$GREEN"
print_message "npm version: $NPM_VERSION" "$GREEN"
print_separator

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
print_message "\nProject size:" "$YELLOW"
du -sh . | cut -f1

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
print_message "\nFile count:" "$YELLOW"
find . -type f -not -path "*/node_modules/*" -not -path "*/dist/*" | wc -l

print_separator
print_message "\nAll checks completed! üéâ" "$GREEN" 